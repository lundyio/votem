/*
  Eight.grid
  ----
  Based on the 8pt grid. (https://spec.fm/specifics/8-pt-grid)
*/


/*!
  Configuration
  ----
  gutter: width emitting from either side of a column
*/
$gutter: 16px;
$mobile-gutter: 16px;
$gutter--ns: 16px;
$gutter--medium: 16px;
$gutter--large: 32px;


/* Container class for any `.row` or `.col` */
.grid {
    padding-left: $gutter;
    padding-right: $gutter;
}

/* A wrapper for all columns to offset gutters and provide positioning extras */
.row {
    margin-left: -$gutter;
    margin-right: -$gutter;
    display: flex;
    &:after {
        content: '';
        clear: both;
        display: table;
    }
    @media screen and (max-width: 736px) {
        display: block;
    }
}


[class^="col-"] {
    width: calc(100% / 8);
    flex: 1 1 calc(100% / 8);
    padding-right: $gutter;
    padding-left: $gutter;
    @media screen and (max-width: 736px){
        flex: none !important;
        width: 100% !important;
        max-width: 100% !important;
        display: block;
    }
}

.col-8 {
    width: 100%;
    max-width: 100%;
    flex: 0 1 100%;
}

.col-7 {
    width: calc(100% - (100% / 8));
    max-width: calc(100% - (100% / 8));
    flex: 0 1 calc(100% - (100% / 8));
}

.col-6 {
    width: calc(100% - ((100% / 8) * 2));
    max-width: calc(100% - ((100% / 8) * 2));
    flex: 0 1 calc(100% - ((100% / 8) * 2));
}

.col-5 {
    width: calc(100% - ((100% / 8) * 3));
    max-width: calc(100% - ((100% / 8) * 3));
    flex: 0 1 calc(100% - ((100% / 8) * 3));
}

.col-4 {
    width: calc(100% - ((100% / 8) * 4));
    max-width: calc(100% - ((100% / 8) * 4));
    flex: 0 1 calc(100% - ((100% / 8) * 4));
}

.col-3 {
    width: calc(100% - ((100% / 8) * 5));
    max-width: calc(100% - ((100% / 8) * 5));
    flex: 0 1 calc(100% - ((100% / 8) * 5));
}

.col-2 {
    width: calc(100% - ((100% / 8) * 6));
    max-width: calc(100% - ((100% / 8) * 6));
    flex: 0 1 calc(100% - ((100% / 8) * 6));
}

.col-1 {
    width: calc(100% / 8);
    max-width: calc(100% / 8);
    flex: 0 1 calc(100% / 8);
}